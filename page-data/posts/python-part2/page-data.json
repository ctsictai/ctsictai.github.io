{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python-part2/","result":{"data":{"markdownRemark":{"id":"4db5d5cb-08e0-5412-ba1f-f2671f88d668","html":"<h1 id=\"list\"><a href=\"#list\" aria-label=\"list permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LIST</h1>\n<blockquote>\n<p>다양한 데이터 타이들을 순서에 따라 저장할 수 잇는 데이터 타입이다.</p>\n</blockquote>\n<ul>\n<li>대괄호[]안에 데이터들을 넣어 주면 된다.</li>\n<li>[]만 변수로 선언하면 빈 list만 생성된다.</li>\n<li>★ 리스트 타입의 개수를 구하기 위해서는 len함수를 이용하면 된다.</li>\n<li>리스트 인덱스의 시작이 1이 아니라 0이다 -> [0] / [1]</li>\n<li>리스트 역 인덱스의 시작은 -1이다 -> [-1] / [-2]</li>\n<li>문자열 type로 적용 가능 + 숫자, boolean 값 등 모든 type의 값을 저장할 수 있으며 서로 다른 type의 값들을 저장하는것도 가능합니다.</li>\n</ul>\n<h2 id=\"adding-and-changing-elements-to-list\"><a href=\"#adding-and-changing-elements-to-list\" aria-label=\"adding and changing elements to list permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding and changing elements to list</h2>\n<ol>\n<li>\n<p>append Added Element!!</p>\n<ul>\n<li>순차적으로 저장함 마지막 인덱스에 요소값 저장</li>\n<li>List name.append(element)</li>\n</ul>\n</li>\n<li>\n<p>”+”</p>\n<ul>\n<li>추가 요소가 1개 이상일 때</li>\n<li>List<em>name = list</em>name + [element, element2]</li>\n<li>new<em>list = list</em>name +list_name2</li>\n</ul>\n</li>\n<li>\n<p>insert</p>\n<ul>\n<li>원하는 위치에 추가하는 메서드</li>\n<li>List_name.insert(indexing number, element)</li>\n<li>Indexing number란 저장할 원하는 위치를 지정해야 한다는 것!</li>\n</ul>\n</li>\n<li>\n<p>element updating</p>\n<ul>\n<li>List_name[idx] = element</li>\n<li>Idx = 바꿀 위치 인덱싱</li>\n<li>Element = 바꿀 요소값</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"튜플tuple\"><a href=\"#%ED%8A%9C%ED%94%8Ctuple\" aria-label=\"튜플tuple permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>튜플(tuple)</h1>\n<ul>\n<li>순서에 따라 저장하는데이터 타입</li>\n<li>괄호 ()안에 데이터들을 넣어 주면 된다.</li>\n<li>리스트와 튜플의 차이점</li>\n<li>리스트 타입의 내용의 변경이 가능(mutable)</li>\n<li>튜플의 경우 내용의 변경이 불가(immutable)</li>\n<li>속도 면에서 튜플이 좀 더 빠르다</li>\n<li>괄호를 사용하지 않아도 튜플을 만들 수 있습니다.</li>\n<li>인덱싱은 리스트와 같다</li>\n</ul>\n<blockquote>\n<p>언제 tuple 사용함?</p>\n</blockquote>\n<p>일반적으로 2개에서 5개 사이의 요소들을 저장할 때, 특정 데이터를 즉각적으로 표현하고 싶을 때 - 2차원 수평면에 위치를 가리키는 벡터를 표현할 때 좋음</p>\n<h1 id=\"dictionary\"><a href=\"#dictionary\" aria-label=\"dictionary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dictionary</h1>\n<ul>\n<li>Dict type = {} – 빈 딕셔너리 선언</li>\n<li>Dict type = {‘aa’ : 2} => { key : value } 로 요소 추가</li>\n<li>순서가 없는 key와 value 쌍으로 된 집합이다(순서가 필요 없음 unique한 key로 구별이 가능함)</li>\n<li>Key와 value {}로 묶어주면 된다.</li>\n<li>Update(키=값) 이름 그대로 딕셔너리에서 키의 값을 수정 및 추가</li>\n<li>Pop(키) or pop(키, 기본값)은 특정 키-값 쌍을 삭제한 뒤 값을 반환</li>\n<li>Key가 딕셔너리 안에 있는지 판단하는 경우 in 연산자 활용</li>\n<li>Dict은 안에 리스트 생성 가능/ key ; value 값 수정 및 추가 및 삭제 가능</li>\n</ul>\n<h2 id=\"create-element-in-dictionary--updating-element\"><a href=\"#create-element-in-dictionary--updating-element\" aria-label=\"create element in dictionary  updating element permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create element in dictionary &#x26; updating element</h2>\n<p><code class=\"language-text\">dictionary_name[new_key] = new_value</code></p>\n<h2 id=\"read-element-in-dictionary\"><a href=\"#read-element-in-dictionary\" aria-label=\"read element in dictionary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Read element in Dictionary</h2>\n<p><code class=\"language-text\">dict_name[‘key_name’] = value 반환!</code></p>\n<ul>\n<li>Key는 string이나 number가능 but 중복은 안됨 unique해야함!!</li>\n<li>만약에 이미 있는 key값으로 요소를 집어 넣으면 updating이 된다.!</li>\n</ul>\n<p><code class=\"language-text\">dict1 = { 1 : &quot;one&quot;, 1 : &quot;two&quot; }</code><br>\n<code class=\"language-text\">print(dict1)</code><br>\n<code class=\"language-text\">{ 1: &quot;two&quot; }</code></p>\n<h2 id=\"delete-element-in-dictionary\"><a href=\"#delete-element-in-dictionary\" aria-label=\"delete element in dictionary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delete element in dictionary</h2>\n<p><code class=\"language-text\">del dict_name[&quot;key_name&quot;]</code></p>\n<h1 id=\"set\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SET</h1>\n<ul>\n<li>중복을 허용하지 않는 순서가 없는 자료형이다. (2가지 유니크한 특징이 있다)</li>\n<li>순서가 없다는 것은 인덱싱을 통해 value를 뽑아 낼 수 없다는 얘기</li>\n<li>중복이 허용이 안된다는 것은 요소들이 모두 unique한 값을 가진 다는 얘기</li>\n<li>중복이 안된다? 활용 가능성이 매우 높지 – 중복 제거 필터로써</li>\n<li>Set 자료형에 인덱싱으로 값에 접근하려면 set를 list나 tuple로 변환 후 인덱싱해야 한다.</li>\n</ul>\n<h2 id=\"set-생성\"><a href=\"#set-%EC%83%9D%EC%84%B1\" aria-label=\"set 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set 생성</h2>\n<ul>\n<li><code class=\"language-text\">S =set()</code> – 빈 set 자료형 생성</li>\n<li>\n<p><code class=\"language-text\">Sw = set(‘hello’)</code></p>\n<blockquote>\n<p>h e l o 자료 요소를 가진 set 자료형 생성 (l은 중복값이 있어서 하나만 요소값으로)</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"set의-가장-많은-활용-법--교집합-합집합-차집합\"><a href=\"#set%EC%9D%98-%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%80-%ED%99%9C%EC%9A%A9-%EB%B2%95--%EA%B5%90%EC%A7%91%ED%95%A9-%ED%95%A9%EC%A7%91%ED%95%A9-%EC%B0%A8%EC%A7%91%ED%95%A9\" aria-label=\"set의 가장 많은 활용 법  교집합 합집합 차집합 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>set()의 가장 많은 활용 법 – 교집합, 합집합, 차집합</h4>\n<ol>\n<li>\n<p>교집합 ( &#x26; or intersection())</p>\n<ul>\n<li><code class=\"language-text\">Set1 = set(1,2,3,4,5)</code></li>\n<li>\n<p><code class=\"language-text\">Set2 = set(3,4,5,6,7)</code></p>\n<blockquote>\n<p>Set1 &#x26; set2 => {3, 4, 5}<br>\nSet1.intersection(set2) =>{3,4,5}</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>합집합 ( | or union)</p>\n<ul>\n<li><code class=\"language-text\">Set1 = set(1,2,3,4,5)</code></li>\n<li>\n<p><code class=\"language-text\">Set2 = set(3,4,5,6,7)</code></p>\n<blockquote>\n<p>Set1 | set2 => {1,2,3,4,5,6,7}<br>\nSet1.union(set2) = > {1,2,3,4,5,6,7}</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>차집합 ( - or difference )  </p>\n<ul>\n<li><code class=\"language-text\">Set1 = set(1,2,3,4,5)</code> - <code class=\"language-text\">Set2 = set(3,4,5,6,7)</code></li>\n</ul>\n<blockquote>\n<p>차집합은 순서가 매우 중요!!!</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;Set1 - set2 =&gt; {1,2}\n&gt;Set1.difference(set2) = &gt; {1,2}\n&gt;Set2 – set1 =&gt; {6, 7}\n&gt;Set2.difference(set1) =&gt; {6,7}</code></pre></div>\n</li>\n</ol>\n<h4 id=\"set에-제공되는-기본-메서드\"><a href=\"#set%EC%97%90-%EC%A0%9C%EA%B3%B5%EB%90%98%EB%8A%94-%EA%B8%B0%EB%B3%B8-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"set에 제공되는 기본 메서드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set에 제공되는 기본 메서드</h4>\n<ol>\n<li>\n<p>add (값 1개 추가)</p>\n<blockquote>\n<p>s1 = set([1, 2, 3])<br>\ns1.add(4)<br>\ns1 {1, 2, 3, 4}</p>\n</blockquote>\n</li>\n<li>\n<p>update ( 값 여러 개 추가)</p>\n<blockquote>\n<p>s1 = set([1, 2, 3])<br>\ns1.update([4, 5, 6])<br>\ns1\n{1, 2, 3, 4, 5, 6}</p>\n</blockquote>\n</li>\n<li>\n<p>remove (특정값 제거)</p>\n<blockquote>\n<p>s1 = set([1, 2, 3])<br>\ns1.remove(2)<br>\ns1\n{1, 3}</p>\n</blockquote>\n</li>\n</ol>","fields":{"slug":"/posts/python-part2/","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2019-10-17T23:30:03.284Z","description":"sequence obj -list/set/dictionary/tuple","tags":["Python"],"title":"Python Apprenticeship Study Part.2","socialImage":"/media/gutenberg.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python-part2/"}}}