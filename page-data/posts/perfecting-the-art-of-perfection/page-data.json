{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/perfecting-the-art-of-perfection/","webpackCompilationHash":"0a6873812e1c45116959","result":{"data":{"markdownRemark":{"id":"265f6c39-f84b-55b1-a69b-7bcf6f1a26b1","html":"<h1 id=\"0930--1004-한-주-정리-part1\"><a href=\"#0930--1004-%ED%95%9C-%EC%A3%BC-%EC%A0%95%EB%A6%AC-part1\" aria-label=\"0930  1004 한 주 정리 part1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>09.30 ~ 10.04 한 주 정리 part.1</h1>\n<h2 id=\"1-변수\"><a href=\"#1-%EB%B3%80%EC%88%98\" aria-label=\"1 변수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 변수</h2>\n<p>변수를 선언하는 명령어 - var / let / const - 최신버전에서는 var 사용은 지양한다.</p>\n<ul>\n<li>Let – 변수값 수정 가능</li>\n<li>Const – 변수값 수정 불가능</li>\n<li>[] 변수 선언 문법</li>\n</ul>\n<p><img src=\"https://blogfiles.pstatic.net/MjAxOTEwMDRfMTIz/MDAxNTcwMTk4OTQ1NzQx.a4yWDmRikvIoOXDD6w84MQEZsHreb5R5xINSum38KJYg.dscq-Xo5r3CKotSm2oiZJHxT4IACet5L4_o_mciQVoog.PNG.civicofjuve/image.png?type=w1\"></p>\n<p>◎ 변수이름 짓기 규칙</p>\n<ul>\n<li>대소문자 구문 - 변수이름, 함수이름, 연산자 모두 대소문자를 구분합니다. 따라서 myName과 MyName은 다른 변수입니다.</li>\n<li>변수 이름을 정할 때, 첫 번째 문자는 반드시 글자나 밑줄(_), 달러기호($)중 하나입니다.</li>\n<li>두 번째 문자부터는 글자, 밑줄, 달러, 숫자 중에서 자유롭게 쓸 수 있습니다.</li>\n<li>변수이름, 함수이름 등 camelCase(카멜케이스) 방식으로 쓸 것.</li>\n</ul>\n<p>※ 카멜케이스(camelCase)란?</p>\n<p>낙타 등처럼 울퉁불퉁하다는 소리입니다. 단어가 새로 시작할 때부터 대문자로 쓰면 됩니다.</p>\n<ul>\n<li>변수 선언 ex)</li>\n</ul>\n<blockquote>\n<p>let name = “김개발”;</p>\n</blockquote>\n<ul>\n<li>변수 값 수정</li>\n</ul>\n<blockquote>\n<p>Name = “김코딩”;</p>\n</blockquote>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> List item</li>\n</ul>\n<p>(주의할 점!) 변수 값 수정 시에는 let을 붙일 필요가 없다 why? 이미 선언된 변수명이기 때문에</p>\n<p>변수명만 선언하고 변수값은 나중에 줘도 됨!</p>\n<ul>\n<li>let man ;</li>\n</ul>\n<blockquote>\n<p>man = “남”;</p>\n</blockquote>\n<h2 id=\"2-함수function\"><a href=\"#2-%ED%95%A8%EC%88%98function\" aria-label=\"2 함수function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수(function)</h2>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 텍스트 추가</li>\n</ul>\n<p><img src=\"https://blogfiles.pstatic.net/MjAxOTEwMDRfMjQg/MDAxNTcwMTk5MjY0OTQ0.-aIwwtQ2LF8WdknKCnADHT8DE94qZDiXp1V-bNdChLsg.-n75Xf-fl31jUw1FPvf_3YIdKIAys3xRC4Nn6jK63pcg.PNG.civicofjuve/image.png?type=w1\"></p>\n<p><img src=\"https://blogfiles.pstatic.net/MjAxOTEwMDRfMTk0/MDAxNTcwMTk5MjY5OTE3.XvtmLWFKhgRfsBwixP71SPirBqMvXIX4HmjoPR3m3Jog.aDKIvV46VDz6wi_TSEww4Mgl9qQN2iyDPQhR5I6Inpwg.PNG.civicofjuve/image.png?type=w1\"></p>\n<ol>\n<li>function 키워드로 시작하여</li>\n<li>함수 이름을 지어주고</li>\n<li>함수를 알리는 괄호((): parentheses)를 열고 닫고</li>\n<li>함수의 시작을 알리는 중괄호({: curly bracket)을 열어줍니다.</li>\n<li>실행할 코드를 작성합니다. 함수의 body라고 부르기도 합니다. 이 부분에 들여쓰기가 되어있습니다. 함수 내부에 있는 코드라는 것을 알기 좋게 하려고 들여쓰기 하였습니다.</li>\n<li>return(반환) 할 것이 있다면 작성합니다.</li>\n<li>중괄호(}: curly bracket)로 닫아줍니다.</li>\n<li>함수 호출(실제 js에서 실행되는 것)</li>\n</ol>\n<h3 id=\"새로운-함수-정의법---arrow-function\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%95%A8%EC%88%98-%EC%A0%95%EC%9D%98%EB%B2%95---arrow-function\" aria-label=\"새로운 함수 정의법   arrow function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 함수 정의법 - Arrow Function</h3>\n<p><em>ES6에서 새로 생긴 방법</em></p>\n<blockquote>\n<p>const getName = (name) => {}</p>\n</blockquote>\n<p>Const getName(함수명) = (name)인자 – 인자가 하나면 ( ) 생략가능 나머지는 안됨 => {}(로직) – return만 있는 경우 {return} 모두 생략 가능</p>\n<blockquote>\n<p>getName(); – 호출방식은 기존과 동일하다.</p>\n</blockquote>\n<p>*구버전 vs ES6 함수 선언 비교\n| 구버전 | ES6 |\n|—|— |\n| let getEmail = function(username){return <code class=\"language-text\">${username}@gmail.com</code>; | const getEmail = username => <code class=\"language-text\">${username}@gmail.com</code>; |</p>\n<h3 id=\"함수의-인자argument-대하여\"><a href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%EC%9D%B8%EC%9E%90argument-%EB%8C%80%ED%95%98%EC%97%AC\" aria-label=\"함수의 인자argument 대하여 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수의 인자(argument) 대하여</h3>\n<p>어떤 함수를 호출했을 때 전달받는 Value</p>\n<p>function multiply(arg1, arg2){ - multiply라는 함수는 인자를 2개 받는다.</p>\n<p>var myNumber = arg1 * arg2; - 받은 인자 2개를 사용하였다.</p>\n<p>if (myNumber > 100) { 받은 인자 2개를 사용한 것에 조건문 추가</p>\n<p>return “크다!”; - 출력되는 결과</p>\n<p>} else{</p>\n<p>return “작다!”; - 출력되는 결과 – 함수의 실행결과를 출력해주는 함수 안해주면</p>\n<p>undefined가 출력이 된다.</p>\n<p>}</p>\n<p>}</p>\n<h2 id=\"3-수학식-표현-방법\"><a href=\"#3-%EC%88%98%ED%95%99%EC%8B%9D-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95\" aria-label=\"3 수학식 표현 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 수학식 표현 방법</h2>\n<p>★ Num++ => num = num + 1 – 계산을 해서 그 결과를 리턴 까지 하는 명령어</p>\n<p>★ Num— => num = num - 1</p>\n<p>※ 중요한 코딩 오류 중 하나 num++의 js 성질</p>\n<p><code class=\"language-text\">let num = 1;</code></p>\n<p><code class=\"language-text\">let newNum = num++;</code></p>\n<ul>\n<li>newNum은 num의 1이 할당되고 num++이게 실행되서 num은 2가 됨</li>\n</ul>\n<p>newNum에도 2가 할당되고 싶으면</p>\n<p><code class=\"language-text\">let newNum = ++num;</code> - ++을 앞에다가 써야 됨</p>\n<h2 id=\"4-데이터-타입\"><a href=\"#4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"4 데이터 타입 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 데이터 타입</h2>\n<ul>\n<li>Undefined - 정의 되지 않는 변수</li>\n<li>null - 없는 값</li>\n<li>boolean - True/False | 조건문에서 조건에 대한 결과 값으로 많이 쓰이는 타입</li>\n<li>숫자 - number</li>\n<li>문자열 - string으로 ” ” 나 ’ ’ 혹은 <code class=\"language-text\"></code> 둘러 쌓인 값</li>\n<li>객체 - function을 제외한 모든 객체</li>\n</ul>","fields":{"slug":"/posts/perfecting-the-art-of-perfection/","tagSlugs":["/tag/java-script/","/tag/web-developer/"]},"frontmatter":{"date":"2019-10-08T17:41:37.121Z","description":"1. 변수\n변수를 선언하는 명령어 - var / let / const - 최신버전에서는 var 사용은 지양한다.\n- Let – 변수값 수정 가능\n- Const – 변수값 수정 불가능\n- [ ] 변수 선언 문법.","tags":["JavaScript","Web Developer"],"title":"09.30 ~ 10.04 한 주 정리 part.1","socialImage":"/media/image-2.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/perfecting-the-art-of-perfection/"}}}