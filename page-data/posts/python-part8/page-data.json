{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python-part8/","result":{"data":{"markdownRemark":{"id":"d9156e86-61ea-5998-94f5-e1d44d7ca8cf","html":"<h1 id=\"예외처리\"><a href=\"#%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\" aria-label=\"예외처리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외처리</h1>\n<h1 id=\"1-try---exception\"><a href=\"#1-try---exception\" aria-label=\"1 try   exception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. TRY - EXCEPTION</h1>\n<p>try에 실행할 코드를 넣고 except에 예외가 발생했을 때 처리하는 코드를 넣습니다.</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>실행할 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except:</p>\n<blockquote>\n<p>예외가 발생했을 때 처리하는 코드</p>\n</blockquote>\n</blockquote>\n<p>20을 정수값을 가진 x 로 나누는 코드를 예를 들면</p>\n<p>다른 숫자는 상관없지만 x가 0인 경우는 연산이 되지 않는다.</p>\n<p>이 때 처리를 어떻게 할 것인가</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>x = int(input(‘나눌 숫자를 입력하세요: ‘))</p>\n</blockquote>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">y = 20 / x\nprint(y)</code></pre></div>\n<blockquote>\n<p>except: # 예외가 발생했을 때 실행됨</p>\n<blockquote>\n<p>print(‘예외가 발생했습니다.‘)</p>\n</blockquote>\n</blockquote>\n<p>x가 0인 경우에는 예외로 간주하여 except에 코딩된 print가 처리 된다.</p>\n<h2 id=\"그러면-특정-예외만-처리하고-싶은-경우에는-어떻게-해야-할까\"><a href=\"#%EA%B7%B8%EB%9F%AC%EB%A9%B4-%ED%8A%B9%EC%A0%95-%EC%98%88%EC%99%B8%EB%A7%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EA%B2%BD%EC%9A%B0%EC%97%90%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"그러면 특정 예외만 처리하고 싶은 경우에는 어떻게 해야 할까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그러면 특정 예외만 처리하고 싶은 경우에는 어떻게 해야 할까?</h2>\n<p>다음과 같이 정수 두 개를 입력받아서 하나는 리스트의 인덱스로 사용하고, 하나는 나누는 값으로 사용합니다.<br>\n그리고 except를 두 개 사용하고 각각 ZeroDivisionError와 IndexError를 지정합니다.</p>\n<p>y = [10, 20, 30]</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>index, x = map(int, input(‘인덱스와 나눌 숫자를 입력하세요: ‘).split())</p>\n</blockquote>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">print(y[index] / x)</code></pre></div>\n<blockquote>\n<p>except ZeroDivisionError: # 숫자를 0으로 나눠서 에러가 발생했을 때 실행됨</p>\n<blockquote>\n<p>print(‘숫자를 0으로 나눌 수 없습니다.‘)  0으로 나눌 경우</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except IndexError: # 범위를 벗어난 인덱스에 접근하여 에러가 발생했을 때 실행됨</p>\n<blockquote>\n<p>print(‘잘못된 인덱스입니다.‘)  실수 넣었을 때</p>\n</blockquote>\n</blockquote>\n<p>주석에 쓰여져 있는 대로 숫자를 0으로 나누는 경우와 인덱스 범위를 넣었을 경우 두 가지 경우를 특정하여 예외처리를 할 수 있다.</p>\n<h2 id=\"예외의-에러-메시지-받아오기\"><a href=\"#%EC%98%88%EC%99%B8%EC%9D%98-%EC%97%90%EB%9F%AC-%EB%A9%94%EC%8B%9C%EC%A7%80-%EB%B0%9B%EC%95%84%EC%98%A4%EA%B8%B0\" aria-label=\"예외의 에러 메시지 받아오기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외의 에러 메시지 받아오기</h2>\n<p>except에서 as 뒤에 변수를 지정하면 발생한 예외의 에러 메시지를 받아올 수 있습니다.</p>\n<p>앞에서 만든 코드의 except에 as e를 넣습니다. 보통 예외( exception)의 e를 따서 변수 이름을 e로 짓습니다</p>\n<p>y = [10, 20, 30]</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>index, x = map(int, input(‘인덱스와 나눌 숫자를 입력하세요: ‘).split())</p>\n</blockquote>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">print(y[index] / x)</code></pre></div>\n<blockquote>\n<p>except ZeroDivisionError as e:</p>\n<blockquote>\n<p>print(‘숫자를 0으로 나눌 수 없습니다.’, e)</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except IndexError as e:</p>\n<blockquote>\n<p>print(‘잘못된 인덱스입니다.’, e)</p>\n</blockquote>\n</blockquote>\n<p><strong>as e</strong> 를 넣어서 달라지는 점은 무엇일까?</p>\n<blockquote>\n<p>0으로 나누는 경우인 ZeroDivisionError를 발생해보면</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">인덱스와 나눌 숫자를 입력하세요: 2 0 (입력)\n숫자를 0으로 나눌 수 없습니다. (division by zero) --&gt; ()내용이 **as e**로 지정해서 나온 것이다</code></pre></div>\n<blockquote>\n<p>정수가 아닌 실수를 입력하여 IndexError를 발생시키면?</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">인덱스와 나눌 숫자를 입력하세요: 3.1 5 (입력)\n잘못된 인덱스입니다. (list index out of range) --&gt; 이게 e로 지정한 것</code></pre></div>\n<h1 id=\"else와-finally\"><a href=\"#else%EC%99%80-finally\" aria-label=\"else와 finally permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Else와 Finally</h1>\n<p>이번에는 예외가 발생하지 않았을 때 코드를 실행하는 else를 사용해보겠습니다. 다음과 같이 else는 except 바로 다음에 와야 하며 except를 생략할 수 없습니다.</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>실행할 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except:</p>\n<blockquote>\n<p>예외가 발생했을 때 처리하는 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>else:</p>\n<blockquote>\n<p>예외가 발생하지 않았을 때 실행할 코드</p>\n</blockquote>\n</blockquote>\n<h2 id=\"예외와는-상관없이-항상-코드-실행하기finally\"><a href=\"#%EC%98%88%EC%99%B8%EC%99%80%EB%8A%94-%EC%83%81%EA%B4%80%EC%97%86%EC%9D%B4-%ED%95%AD%EC%83%81-%EC%BD%94%EB%93%9C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0finally\" aria-label=\"예외와는 상관없이 항상 코드 실행하기finally permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외와는 상관없이 항상 코드 실행하기(finally)</h2>\n<p>이번에는 예외 발생 여부와 상관없이 항상 코드를 실행하는 finally를 사용해보겠습니다.<br>\n특히 finally는 except와 else를 생략할 수 있습니다. Finally는 코드가 끝나면 무조건 마지막에 실행되는 코드를 말한다.</p>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>실행할 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except:</p>\n<blockquote>\n<p>예외가 발생했을 때 처리하는 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>else:</p>\n<blockquote>\n<p>예외가 발생하지 않았을 때 실행할 코드</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>finally:</p>\n<blockquote>\n<p>예외 발생여부가 상관없이 무조건 마지막에 실행되는 코드</p>\n</blockquote>\n</blockquote>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/99611C4C5D4AE03E28\" alt=\"try-except-else-finally\"></p>\n<h2 id=\"예외-발생시키기\"><a href=\"#%EC%98%88%EC%99%B8-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"예외 발생시키기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외 발생시키기</h2>\n<p>예외를 발생시킬 때는 raise에 예외를 지정하고 에러 메시지를 넣습니다(에러 메시지는 생략 할 수 있음).</p>\n<ul>\n<li>raise 예외(‘에러메시지’)</li>\n<li>raise의 처리 과정</li>\n</ul>\n<blockquote>\n<p>def three_multiple():</p>\n<blockquote>\n<p>x = int(input(‘3의 배수를 입력하세요: ‘))</p>\n</blockquote>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if x % 3 != 0:                            # x가 3의 배수가 아니면\n    raise Exception(&#39;3의 배수가 아닙니다.&#39;)    # 예외를 발생시킴\nprint(x)                             # 현재 함수 안에는   except가 없으므로\n\n        # 예외를 상위 코드 블록으로 넘김</code></pre></div>\n<blockquote>\n<p>try:</p>\n<blockquote>\n<p>three_multiple()</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>except Exception as e: # 하위 코드 블록에서 예외가 발생해도 실행됨</p>\n<blockquote>\n<p>print(‘예외가 발생했습니다.’, e)</p>\n</blockquote>\n</blockquote>\n<p>이 코드를 x에 3의 배수가 아닌 수를 넣고 실행을 해보면 결과가</p>\n<blockquote>\n<p>예외가 발생했습니다. 3의 배수가 아닙니다.</p>\n</blockquote>\n<p>이렇게 발생합니다. except가 출력되고 Exception에서 준 내용이 출력되는 형식입니다.</p>\n<p>three_multiple 함수는 안에 try except가 없는 상태에서 raise로 예외를 발생시켰습니다.<br>\n이렇게 되면 함수 바깥에 있는 except에서 예외가 처리됩니다. 즉, 예외가 발생하더라도 현재 코드 블록에서 처리해줄 except가 없다면 except가 나올 때까지 계속 상위 코드 블록으로 올라갑니다.</p>\n<p>함수안의 local scope와 바깥의 global scope 구분을 잘해야 합니다.</p>\n<h2 id=\"예외-다시-발생-시키기\"><a href=\"#%EC%98%88%EC%99%B8-%EB%8B%A4%EC%8B%9C-%EB%B0%9C%EC%83%9D-%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"예외 다시 발생 시키기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외 다시 발생 시키기</h2>\n<p>이번에는 try except에서 처리한 예외를 다시 발생시키는 방법입니다.<br>\nexcept 안에서 raise를 사용하면 현재 예외를 다시 발생시킵니다(re-raise).</p>\n<blockquote>\n<p>except:</p>\n<blockquote>\n<p>raise ~~~</p>\n</blockquote>\n</blockquote>\n<h3 id=\"assert로-예외-발생시키기추가-내용\"><a href=\"#assert%EB%A1%9C-%EC%98%88%EC%99%B8-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EA%B8%B0%EC%B6%94%EA%B0%80-%EB%82%B4%EC%9A%A9\" aria-label=\"assert로 예외 발생시키기추가 내용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>assert로 예외 발생시키기(추가 내용)</h3>\n<p>예외를 발생시키는 방법 중에는 assert를 사용하는 방법도 있습니다.<br>\nassert는 지정된 조건식이 거짓일 때 AssertionError 예외를 발생시키며 조건식이 참이면 그냥 넘어갑니다. 보통 assert는 나와서는 안 되는 조건을 검사할 때 사용합니다.</p>\n<p>x = int(input(‘3의 배수를 입력하세요: ‘))<br>\nassert x % 3 == 0, ‘3의 배수가 아닙니다.’ # 3의 배수가 아니면 예외 발생, 3의 배수이면 그냥 넘어감<br>\nprint(x)</p>","fields":{"slug":"/posts/python-part8/","tagSlugs":["/tag/python/"]},"frontmatter":{"date":"2019-10-22T23:30:03.284Z","description":"예외처리","tags":["Python/"],"title":"Python Apprenticeship Study Part.8","socialImage":"/media/gutenberg.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/python-part8/"}}}