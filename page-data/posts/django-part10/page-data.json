{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/django-part10/","result":{"data":{"markdownRemark":{"id":"13092730-9c64-5fa2-b608-3487e4ce01d5","html":"<h1 id=\"exception-handling\"><a href=\"#exception-handling\" aria-label=\"exception handling permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exception Handling</h1>\n<ul>\n<li>Exception : 정상적인 프로그램 흐름을 중단시키는 에러를 말합니다.</li>\n<li>Exception Handling : 정상적인 프로그램 흐름을 중단하고 주변의 컨텍스트 또는 코드 블록에서 계속하기위한 메커니즘</li>\n</ul>\n<h1 id=\"try--except---exception-handling-method\"><a href=\"#try--except---exception-handling-method\" aria-label=\"try  except   exception handling method permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Try / Except - Exception Handling Method</h1>\n<p>try 블록 수행 중 오류가 발생하면 except 블록이 수행된다. 하지만 try 블록에서 오류가 발생하지 않는다면 except 블록은 수행되지 않는다.</p>\n<ul>\n<li>try-except 코드 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">try:\n    ...\nexcept [발생 오류[as 오류 메시지 변수]]:\n    ...</code></pre></div>\n<ul>\n<li>try finally\nfinally절은 try문 수행 도중 예외 발생 여부에 상관없이 항상 수행된다. 보통 finally절은 사용한 리소스를 close해야 할 때에 많이 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">f = int(s)\ntry:\n    # 무언가를 수행한다.\nfinally:\n    f.close()</code></pre></div>\n<p>f변수는 int()함수인데 try문에 어떠한 로직을 실행하고 exception에 관계없이 finally 절에서 f.close()로 로직을 마무리 할 수 있다.</p>\n<h2 id=\"여러개의-오류-처리시\"><a href=\"#%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-%EC%98%A4%EB%A5%98-%EC%B2%98%EB%A6%AC%EC%8B%9C\" aria-label=\"여러개의 오류 처리시 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러개의 오류 처리시</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">try:\n    ...\nexcept 발생 오류1:\n   ...\nexcept 발생 오류2:\n   ...</code></pre></div>\n<blockquote>\n<p>실제 코드 예시</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class SigninView(View):\n    def post(self, request):\n        data = json.loads(request.body)\n\n        try:\n            validate_email(data[&quot;email&quot;])\n            user_data      = User.objects.get(email=data[&quot;email&quot;])\n            user_password  = user_data.password.encode(&#39;utf-8&#39;)\n            byted_password = data[&#39;password&#39;].encode(&#39;utf-8&#39;)\n\n            if bcrypt.checkpw(byted_password, user_password):\n                payload = {\n                        &quot;user_id&quot;       : user_data.id,\n                        &quot;user_is_maker&quot; : user_data.is_maker,\n                        &quot;exp&quot;           : WEDIZ_SECRET[&#39;exp_time&#39;],\n                        }\n                jwt_encode = jwt.encode(payload, WEDIZ_SECRET[&#39;secret&#39;], algorithm=&quot;HS256&quot;)\n                token = jwt_encode.decode(&quot;utf-8&quot;)\n                return JsonResponse({&quot;VALID_TOKEN&quot; : token}, status=200)\n\n            else:\n                return JsonResponse({&quot;MESSAGE&quot; : &quot;INVALID_PASSWORD&quot;}, status=401)\n        except User.DoesNotExist:\n            return JsonResponse({&quot;MESSAGE&quot; : &quot;INVALID_USER&quot;}, status=401)\n        except KeyError:\n            return JsonResponse({&quot;MESSAGE&quot; : &quot;INVALID_INPUT&quot;}, status=400)</code></pre></div>\n<ul>\n<li>try - except에서 if문으로 한번 더 binary decision 로직을 구현하였다.</li>\n<li>signin 로직이다. 이메일과 패스워드를 비교하여 일치하는 지 여부를 판별한다.</li>\n<li>except에서는 유저가 존재하지 않는 경우</li>\n<li>jsonresponse에서 key가 잘못된 경우에 예외처리로 처리하였다.</li>\n<li>예외가 2개 이상인 경우 except를 예외 처리 수 만큼 붙여주면 된다.</li>\n<li>\n<p>jsonresponse는 프론트에 http 통신으로 보내는 응답값이므로 json형식에 맞는 body 설정과 status설정을 해줘야 한다. status는 http status code를 뜻한다.</p>\n<ul>\n<li>except는 예외처리이므로 보통 http status 400번대 에러가 status로 가장 많이 발생한다.</li>\n<li>서비스 상에서는 발생할 수 있는 모든 예외처리를 하는 것이 맞다.\n그래서 500번대 에러도 예외처리로 처리하면 좋다</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"예외-발생-시키기\"><a href=\"#%EC%98%88%EC%99%B8-%EB%B0%9C%EC%83%9D-%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"예외 발생 시키기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외 발생 시키기</h1>\n<p>프로그래밍을 하다 보면 종종 오류를 일부러 발생시켜야 할 경우도 생긴다. 파이썬은 raise 명령어를 사용해 오류를 강제로 발생시킬 수 있다.</p>\n<p>예를 들어 부모 밑에 자식을 무조건 생성하고 싶을 때에 예외를 일부러 발생시켜 자식을 같이 생성하라고 강제할 수 있다. 그 때 개략적으로 코드를 아래와 같이 구성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Parent:\n    def child(self):\n        raise NotImplementedError</code></pre></div>\n<p>그러면 실제로 자식없는 부모를 생성하면 어떻게 될까?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Jang(Parent):\n    pass\n\njand = Jang()\njang.child()\n\nTraceback (most recent call last):\n  File &quot;...&quot;, line 33, in &lt;module&gt;\n    jang.child()\n  File &quot;...&quot;, line 26, in fly\n    raise NotImplementedError\nNotImplementedError</code></pre></div>\n<ul>\n<li>\n<p>Parent 클래스에 속해있는 child 함수를 구현하지 않으면 raise를 통해 에러가 도출 되도록 설계되어 있기 때문이다. 에러를 발생시키지 않으려면 child 함수를 구현해야한다.</p>\n<ul>\n<li>메소드 오버라이딩을 해야한다(상속받는 함수 재구현)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Jang(Parent):\n    def child(self):\n        print(&quot;자식입니다&quot;)\n\njand = Jang()\njang.child()\n\n자식입니다</code></pre></div>\n<h1 id=\"예외이름을-잘-모르는-경우\"><a href=\"#%EC%98%88%EC%99%B8%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%9E%98-%EB%AA%A8%EB%A5%B4%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"예외이름을 잘 모르는 경우 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외이름을 잘 모르는 경우</h1>\n<p>장고나 파이썬에서 제공하는 기본적인 예외들이 있다. 이 경우에는 이 예외를 import해서 가져다가 쓰면되지만 이 경우에 해당되지 않거나 초보자는 잘 모를 때가 있다. 그럴 때 쓸 수 있는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">try:\n    test = []\n    print(test[0])\n\nexcept Exception as ex:\n    print(&#39;에러가 발생 했습니다&#39;, ex)\n\n    에러가 발생 했습니다 list index out of range</code></pre></div>\n<ul>\n<li>최후의 수단으로 어쩔수 없을 때 쓰는 것이 좋다</li>\n<li>왠만한 예외는 장고나 파이썬에서 제공하고 있으므로 import해서 쓰자</li>\n</ul>\n<h1 id=\"장고에서-제공하는-예외\"><a href=\"#%EC%9E%A5%EA%B3%A0%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%98%88%EC%99%B8\" aria-label=\"장고에서 제공하는 예외 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고에서 제공하는 예외</h1>\n<p>장고의 예외는 django.core.exceptions에서 import 해야한다.<br>\n많은 종류가 있지만 제가 생각하기에 사용빈도가 높거나 중요한 것 위주로 리뷰해본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from django.core.exceptions import ObjectDoesNotExist, .....</code></pre></div>\n<h2 id=\"1-objectdoesnotexist\"><a href=\"#1-objectdoesnotexist\" aria-label=\"1 objectdoesnotexist permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ObjectDoesNotExist</h2>\n<p>DoesNotExist 예외 클래스의 기본 클래스이다. ObjectDoesNotExist는 전체 모델에 적용할 수 있는 일반적인 예외처리이다.</p>\n<h2 id=\"2-doesnotexist\"><a href=\"#2-doesnotexist\" aria-label=\"2 doesnotexist permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. DoesNotExist</h2>\n<p>ObjectDoesNotExist 자식 클래스로써 특정 클래스에 속성으로 사용되어 진다.<br>\n<strong>EX)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">except User.DoesNotExist:\n    return JsonResponse({&quot;MESSAGE&quot; : &quot;YOU_ARE_NOT_USER&quot;}, status=401)</code></pre></div>\n<h2 id=\"3-multipleobjectsreturned\"><a href=\"#3-multipleobjectsreturned\" aria-label=\"3 multipleobjectsreturned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. MultipleObjectsReturned</h2>\n<p>예외 명 그대로 한 개의 쿼리셋 오브젝트가 리턴되야 하는데 다수의 쿼리셋 오브젝트가 리턴될 때 발생되는 예외처리이다.</p>\n<ul>\n<li>주로 쿼리셋 <strong>get()</strong> 함수를 사용할 때 발생하는 예외로서 get은 한 개의 쿼리셋 오브젝트를 리턴해야 하는데 2개 이상 리턴되는 경우 예외를 발생시킨다.</li>\n</ul>\n<h2 id=\"4-improperlyconfigured\"><a href=\"#4-improperlyconfigured\" aria-label=\"4 improperlyconfigured permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. ImproperlyConfigured</h2>\n<p>장고가 어떻게 든 잘못 구성된 경우 예외가 발생 settings.py 부정확하거나 파싱 할 수 있습니다</p>\n<h2 id=\"5-validationerror\"><a href=\"#5-validationerror\" aria-label=\"5 validationerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. ValidationError</h2>\n<p>ValidationError데이터 형식 모델 필드 유효성 검사를 실패 할 경우 예외가 발생합니다. 자세한 사항은 양식 및 필드 유효성 검증 , 모델 필드 유효성 검증을 참고해야 한다. 다음에 다뤄보도록 하겠다</p>\n<h2 id=\"6-transactionmanagementerror\"><a href=\"#6-transactionmanagementerror\" aria-label=\"6 transactionmanagementerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. TransactionManagementError</h2>\n<p>데이터 베이스 트랜잭션에 대한 모든 문제에 대해 발생하는 예외로서\n<code class=\"language-text\">django.db.transaction</code> 에서 import해야한다.</p>\n<h2 id=\"7-데이터베이스예외-중-integrityerror\"><a href=\"#7-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%98%88%EC%99%B8-%EC%A4%91-integrityerror\" aria-label=\"7 데이터베이스예외 중 integrityerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 데이터베이스예외 중 IntegrityError</h2>\n<p><code class=\"language-text\">django.db</code> 에서 import한다.<br>\n외래 키 검사 실패, 중복 키 등과 같이 데이터베이스의 관계 무결성에 영향을주는 경우 예외가 발생합니다.</p>\n<h2 id=\"7-2-데이터베이스예외-중-programmingerror\"><a href=\"#7-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%98%88%EC%99%B8-%EC%A4%91-programmingerror\" aria-label=\"7 2 데이터베이스예외 중 programmingerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7-2. 데이터베이스예외 중 ProgrammingError</h2>\n<p>이 예외는 SQL에 구문 오류가 있거나 테이블을 찾을 수 없는 경우와 같이 프로그래밍 오류에서 발생합니다.</p>\n<h1 id=\"python에서-제공하는-예외들\"><a href=\"#python%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%98%88%EC%99%B8%EB%93%A4\" aria-label=\"python에서 제공하는 예외들 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python에서 제공하는 예외들</h1>\n<h2 id=\"1-exception\"><a href=\"#1-exception\" aria-label=\"1 exception permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Exception</h2>\n<p>가장 기본이 되는 예외처리 클래스<br>\n모든 시스템 종료 외의 내장 예외는 이 클래스 파생됩니다. 모든 사용자 정의 예외도 이 클래스에서 파생되어야 한다.</p>\n<h2 id=\"2-attributeerror\"><a href=\"#2-attributeerror\" aria-label=\"2 attributeerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. AttributeError</h2>\n<p>어트리뷰트 참조나 대입이 실패할 때 발생(속성 참조 실패)<br>\n보통 view 로직에서 발생한다.</p>\n<h2 id=\"3-importerror\"><a href=\"#3-importerror\" aria-label=\"3 importerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. ImportError</h2>\n<p>import 문이 모듈을 로드하는 데 문제가 있을 때 발생합니다.<br>\n또한 from … import 에서 임포트 하려는 이름을 찾을 수 없을 때도 발생합니다.</p>\n<h2 id=\"4-keyerror\"><a href=\"#4-keyerror\" aria-label=\"4 keyerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. KeyError</h2>\n<p>매핑 (딕셔너리) 키가 기존 키 집합에서 발견되지 않을 때 발생한다.</p>\n<h2 id=\"5-syntaxerror\"><a href=\"#5-syntaxerror\" aria-label=\"5 syntaxerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. SyntaxError</h2>\n<p>parser가 문법 오류를 만날 때 발생합니다. import 문에서, 내장 함수 exec() 나 eval() 호출에서, 초기 스크립트나 (대화형으로) 표준 입력을 읽을 때 발생할 수 있습니다.</p>\n<p>세부 사항을 쉽게 확인할 수 있도록, 이 클래스의 인스턴스에는 filename, lineno, offset 및 text 어트리뷰트가 있습니다. 예외 인스턴스의 str()은 메시지만 돌려줍니다.</p>\n<h2 id=\"6-typeerror\"><a href=\"#6-typeerror\" aria-label=\"6 typeerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. TypeError</h2>\n<p>연산이나 함수가 부적절한 형의 객체에 적용될 때 발생합니다. 연관된 값은 형 불일치에 대한 세부 정보를 제공하는 문자열입니다.</p>\n<p>이 예외는 객체에 시도된 연산이 지원되지 않으며 그럴 의도도 없음을 나타내기 위해 사용자 코드가 발생시킬 수 있습니다. 만약 객체가 주어진 연산을 지원할 의사는 있지만, 아직 구현을 제공하지 않는 경우라면, NotImplementedError 를 발생시키는 것이 적합합니다.</p>\n<p>잘못된 type의 인자를 전달하면 (가령 int 를 기대하는데 list를 전달하기), TypeError 를 일으켜야 합니다. 하지만 잘못된 값을 갖는 인자를 전달하면 (가령 범위를 넘어서는 숫자) ValueError 를 일으켜야 합니다.</p>\n<h2 id=\"7-valueerror\"><a href=\"#7-valueerror\" aria-label=\"7 valueerror permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. ValueError</h2>\n<p>연산이나 함수가 올바른 형이지만 부적절한 값을 가진 인자를 받았고, 상황이 IndexError 처럼 더 구체적인 예외로 설명되지 않는 경우 발생합니다.</p>","fields":{"slug":"/posts/django-part10/","tagSlugs":["/tag/python-django/"]},"frontmatter":{"date":"2019-12-11T23:30:03.284Z","description":"Views Try-Except & django give exceptions","tags":["Python/Django"],"title":"Django View part3","socialImage":"/media/gutenberg.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/django-part10/"}}}