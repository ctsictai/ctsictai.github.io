{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/django-part5/","result":{"data":{"markdownRemark":{"id":"975cfeba-1215-598c-9ca2-cbdfe0674932","html":"<h1 id=\"백엔드의-기본-개념-다시-짚기\"><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EB%8B%A4%EC%8B%9C-%EC%A7%9A%EA%B8%B0\" aria-label=\"백엔드의 기본 개념 다시 짚기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백엔드의 기본 개념 다시 짚기</h1>\n<p>백엔드 toy 프로젝트도 진행 한 번 해보면서 부족한 점을 많이 느꼈지만 의외로 내가 기초 개념들이 부족하다는 것을 다시 한번 느끼고 정리하고 가려고 한다.</p>\n<h2 id=\"백엔드-개발시-주의점\"><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"백엔드 개발시 주의점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백엔드 개발시 주의점</h2>\n<ol>\n<li>\n<p>프론트 웹페이지에 맞춰지는 개발은 되도록 지양한다. 왜 그럴까?</p>\n<ol>\n<li>프론트 웹 페이지는 유동성이 매우 크다</li>\n<li>당시 한 페이지에서만 기능이 구현되서 범용성이 매우 떨어진다.</li>\n</ol>\n</li>\n<li>백엔드는 데이터 중심이고 데이터를 저장하는 Database 조직하는 모델이 중심이 되어야 한다.</li>\n<li>데이터를 저장하는데 RDBMS을 사용한다면 DB 모델링이 매우 중요하다. 데이터가 어떻게 관계를 맺고 있으며 어떻게 저장해야 정합성있고 논리적인지 생각해야한다. 이걸 하기 위해서 정규화를 제대로 알아야 한다는 생각이 든다.</li>\n<li>데이터를 어떻게 가공하여 프론트앤드에 제공할 것인가? 주로 JSON 형태의 데이터 타입을 제공하지만 그 JSON 형태의 키값은? value의 형식은? - 데이터의 관계성에 따라서</li>\n</ol>\n<h2 id=\"장고의-앱은-무엇을-뜻하는가\"><a href=\"#%EC%9E%A5%EA%B3%A0%EC%9D%98-%EC%95%B1%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%84-%EB%9C%BB%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"장고의 앱은 무엇을 뜻하는가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고의 앱은 무엇을 뜻하는가?</h2>\n<p>하나의 독립적인 컴포넌트라고 보면 된다. 혹은 독립적인 모듈의 하나라고 봐도 된다.</p>\n<h2 id=\"그러면-프로젝트란-무엇인가\"><a href=\"#%EA%B7%B8%EB%9F%AC%EB%A9%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"그러면 프로젝트란 무엇인가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그러면 프로젝트란 무엇인가?</h2>\n<p>하나의 독립적인 어플리케이션이라고 보면 된다.</p>\n<ul>\n<li>프로젝트에서 어플리케이션을 개발할 때 필요한 기능 단위인 앱(컴포넌트) 단위로 나누어서 개발하여 개발의 모듈화와 유지보수 관리가 편리하게 한다.</li>\n</ul>\n<h2 id=\"single-responsibility\"><a href=\"#single-responsibility\" aria-label=\"single responsibility permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single Responsibility</h2>\n<p>class 나 function을 module화여 최대한 한가지 기능만 구현하도록 코드를 짜는 것을 얘기한다.\n그러나 기능이 2개이상인 불가피한 경우가 생기는데(그렇다고 따로 class나 function을 만들기도 애매한 상황) 그럴 때 쓰는 것이 데코레이터다</p>\n<h2 id=\"elif는-최대한-피하자\"><a href=\"#elif%EB%8A%94-%EC%B5%9C%EB%8C%80%ED%95%9C-%ED%94%BC%ED%95%98%EC%9E%90\" aria-label=\"elif는 최대한 피하자 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>elif는 최대한 피하자</h2>\n<p>조건문은 최대한 binary하게 나누는 것이 좋다</p>\n<h1 id=\"queryset-in-django\"><a href=\"#queryset-in-django\" aria-label=\"queryset in django permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queryset in django</h1>\n<p>queryset은 database에서 데이터의 집합을 나타내는 것으로 하나의 객체(object)라고 보면 된다. 보통 객체 단위를 한 개의 row라고 보면 된다.</p>\n<h2 id=\"selected_related\"><a href=\"#selected_related\" aria-label=\"selected_related permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selected_related()</h2>\n<ol>\n<li>ForeignKey, OneToOneField 관계에서 활용</li>\n<li>ForeignKey/OneToOneField 관계에서 Lazy하게 쿼리하지 않고, DB단에서 INNER JOIN 으로 쿼리할 수 있다.</li>\n<li>QuerySet 객체를 가져올 때 연관있는 model들을 같이 가져오게 해주는 메서드이다.</li>\n<li>selected_related(‘foreignkey 필드명’)으로 해당 쿼리셋 모델을 가져와 cache한다.</li>\n</ol>\n<h2 id=\"prefetch_related\"><a href=\"#prefetch_related\" aria-label=\"prefetch_related permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prefetch_related()</h2>\n<ol>\n<li>ManyToManyField, ForeignKey의 reverse relation 에서 활용</li>\n<li>각 관계 별로 DB 쿼리를 수행하고, 파이썬 단에서 조인을 수행한다</li>\n<li>QuerySet 객체를 가져올 때 연관있는 model들을 같이 가져오게 해주는 메서드이다.</li>\n<li>prefetch_related(‘manytomany필드명’)으로 해당 쿼리셋 모델을 가져와서 cache</li>\n</ol>\n<h2 id=\"objectsbulk_create\"><a href=\"#objectsbulk_create\" aria-label=\"objectsbulk_create permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>objects.bulk_create()</h2>\n<p>일정한 규칙을 가진 obj 다수를 database에 저장할 때 쓰는 구문이다.\nbulk_create가 없다면 objects.get()으로 한 개의 row object를 받아와서 for문 돌려서 저장해야하는데 그것을 한 가지 query로 줄일 수 있다.</p>\n<p>일정한 규칙을 가진 다수의 obj(여러개의 row)를 저장할 때 유용하게 사용하자</p>","fields":{"slug":"/posts/django-part5/","tagSlugs":["/tag/python-django-database-sql/"]},"frontmatter":{"date":"2019-11-13T21:30:03.284Z","description":"Django basic concept & Database & django orm basic concept/SQL","tags":["Python/Django/Database/sql"],"title":"Django Apprenticeship Study Part.5","socialImage":"/media/gutenberg.jpg"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/django-part5/"}}}